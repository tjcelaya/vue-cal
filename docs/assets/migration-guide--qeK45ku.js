import{u,b as m,k as n,f as l,e as t,w as d,h as o,a as i,g as r,F as g,d as h}from"./index-dx2pSOUJ.js";import{b as w}from"./index-nbR526H7.js";const k={__name:"migration-guide",setup(y){const c=u();return w(),(p,e)=>{const a=i("title-link"),s=i("ssh-pre"),v=i("router-link");return h(),m(g,null,[e[14]||(e[14]=n('<h1 class="title1">Migration Guide</h1><p>Welcome to the<strong class="mx1">Migration Guide</strong>for transitioning to the latest version of Vue Cal. This guide is designed to help you smoothly upgrade your project by outlining the changes, enhancements, and potential breaking updates introduced in the new version.</p><p class="mt4">In this document, youâ€™ll find:</p><ul><li><strong>Key Differences</strong>: An overview of major updates and improvements.</li><li><strong>Breaking Changes</strong>: Details about deprecated features and necessary adjustments.</li></ul><p class="mt4">We recommend reading through this guide completely before beginning the migration process. Doing so will help ensure a seamless upgrade while taking full advantage of the new features and optimizations available in this version.</p><p>Letâ€™s get started! ðŸš€</p>',6)),l(a,{h2:"",anchor:"new"},{default:d(()=>e[0]||(e[0]=[o("New Features & Improvements")])),_:1,__:[0]}),e[15]||(e[15]=n("<p>Vue Cal has been completely <strong>refactored from the ground up</strong>, using the Composition API and\ncomposables, while focusing on two key aspects: <strong>performance and flexibility</strong>.\nYou will continue to benefit from all the features of previous versions, now enhanced with new functionality and improvements.</p><ul><li><strong>Performance-oriented</strong>: faster and more efficient than ever.</li><li>Highly adapted and practical for use with the Composition API.</li><li><strong>Exposes the view</strong> for external use.</li><li><strong>Exposes all date utilities</strong> for external use.</li><li>Take advantage of <strong>Date prototypes whenever and wherever</strong> you want, even before the calendar is created or mounted.</li><li><strong>Modernized default UI</strong> for a more contemporary appearance, designed to save you time and effort in customization and usability.</li><li><strong>Custom days view</strong> to display a custom number of days with an adaptive grid layout.</li><li><strong>Flexible grid-based layout</strong> for enhanced customization.</li><li><strong>Easy theming</strong> with support for dark and light themes, plus CSS variables.</li><li><strong>All-direction sticky headers</strong>: Sticky headers and sticky time bars simultaneously - achieved purely with CSS.</li><li>Directly <strong>preload a locale externally</strong> to avoid handling Promises.</li><li>Reworked options for <strong>more intuitive usage</strong>.</li><li>Fine-grain event deletion in 3 stages: 1. show the delete button, 2. delete the event from the view, 3. delete the event in the source of truth.</li><li>Events are deleted by their internal ID, or by a provided custom key-value pair (e.g. `{ id: 123 }`).</li><li>New animation on event deletion.</li><li>New event v-model for more control over events.</li><li>More intuitive and flexible event creation.</li><li>More events are emitted for more control and customization. E.g. <code>cell-drag-start</code>, <code>cell-drag</code>, <code>cell-drag-end</code>, <code>cell-delayed-click</code>, <code>cell-hold</code>, <code>event-create</code>, <code>event-delete</code>, <code>event-delayed-click</code>, <code>event-hold</code>, <code>event-resize-start</code>, <code>event-resize</code>, <code>event-resize-end</code>, <code>event-drag-start</code>, <code>event-drag</code>, <code>event-drag-end</code>.</li><li>Any valid event listener will be forwarder to cells and events. E.g. <code>cell-click</code>, <code>cell-dblclick</code>, <code>cell-drag-start</code>, <code>cell-drag</code>, <code>cell-drag-end</code>, <code>cell-hold</code>, <code>cell-mousedown</code>, <code>cell-touchstart</code>, <code>cell-mouseenter</code>, <code>cell-mouseleave</code>, <code>cell-contextmenu</code>, <code>event-create</code>, <code>event-click</code>, <code>event-dblclick</code>, <code>event-drag-start</code>, <code>event-drag</code>, <code>event-drag-end</code>, <code>event-drop</code>, <code>event-resize-start</code>, <code>event-resize</code>, <code>event-resize-end</code>, <code>event-mouseenter</code>, <code>event-mouseleave</code>, <code>event-contextmenu</code>.</li><li>Ability to reject event creation.</li><li>Ability to reject event drag and drop and event resize.</li><li>Exposed event overlap detection for more external control.</li><li>Supports dynamic event colors.</li></ul>",2)),l(a,{h2:"",anchor:"global-changes"},{default:d(()=>e[1]||(e[1]=[o("Global Changes")])),_:1,__:[1]}),t("ul",null,[t("li",null,[e[3]||(e[3]=t("p",null,"The Date prototypes are not injected by default anymore, and very easy to add, you control when:",-1)),l(s,{language:"js",dark:r(c).darkMode},{default:d(()=>e[2]||(e[2]=[o(`import { addDatePrototypes } from '@/vue-cal'

addDatePrototypes()`)])),_:1,__:[2]},8,["dark"])]),e[6]||(e[6]=t("li",null,`No more header right margin to align with body if there is a scrollbar. Now the Vue Cal body is
scrollable with sticky headers (weekdays and time column) in both axis.`,-1)),e[7]||(e[7]=t("li",null,[o("The selected date and view date are now 2 separated variables: "),t("code",null,"selectedDate"),o(` and
`),t("code",null,"viewDate"),o(", so they can be updated distinctly without the side effect of the other.")],-1)),t("li",null,[e[5]||(e[5]=n(`<p>You can now directly attach any valid DOM event you want to the events and cells.
It only needs to start respectively with <code>event-</code> and <code>cell-</code> to be forwarded.<br>
Additionnally, new events are fired on more complex circumstances: <code>cell-drag-start</code>,
<code>cell-drag</code>, <code>cell-drag-end</code>, <code>cell-delayed-click</code>, <code>cell-hold</code>,
<code>event-create</code>, <code>event-delete</code>, <code>event-delayed-click</code>, <code>event-hold</code>,
<code>event-resize-start</code>, <code>event-resize</code>, <code>event-resize-end</code>,
<code>event-drag-start</code>, <code>event-drag</code>, <code>event-drag-end</code>.</p><p>For instance:</p>`,2)),l(s,{language:"html-vue",dark:r(c).darkMode},{default:d(()=>e[4]||(e[4]=[o(`<vue-cal
  @cell-click="log('cell-click', $event)"
  @cell-dblclick="log('cell-dblclick', $event)"
  @cell-drag-start="log('cell-drag-start', $event)"
  @cell-drag="log('cell-drag', $event)"
  @cell-drag-end="log('cell-drag-end', $event)"
  @cell-hold="log('cell-hold', $event)"
  @cell-mousedown="log('cell-mousedown', $event)"
  @cell-touchstart="log('cell-touchstart', $event)"
  @cell-mouseenter="log('cell-mouseenter', $event)"
  @cell-mouseleave="log('cell-mouseleave', $event)"
  @cell-contextmenu="log('cell-contextmenu', $event)"
  @event-create="eventCreation.open"
  @event-click="log('event-click', $event)"
  @event-dblclick="log('event-dblclick', $event)"
  @event-drag-start="log('event-drag-start', $event)"
  @event-drag="log('event-drag', $event)"
  @event-drag-end="log('event-drag-end', $event)"
  @event-drop="log('event-drop', $event)"
  @event-resize-start="log('event-resize-start', $event)"
  @event-resize="log('event-resize', $event)"
  @event-resize-end="log('event-resize-end', $event)"
  @event-mouseenter="log('event-mouseenter', $event)"
  @event-mouseleave="log('event-mouseleave', $event)"
  @event-contextmenu="log('event-contextmenu', $event)">
</vue-cal>
`)])),_:1,__:[4]},8,["dark"])]),e[8]||(e[8]=n(`<li>Navigation by clicking or double-clicking cell has been removed, you can add this yourself
now that you can directly attach any valid DOM event to the cell.</li><li>The default theme is used by default. No need to add the class anymore, but you can disable and
style from scratch by setting the <code>theme</code> prop to false or a different class string.</li><li>Scrolling to time is now built-in and accessible from the view object. 3 functions are available:<ul><li>scrollTop()</li><li>scrollToTime(minutes)</li><li>scrollToCurrentTime()</li></ul></li><li><code>.vuecal--full-height-delete</code> class was removed</li><li><code>#no-event</code> slot was removed</li><li><code>#week-numbers-cell</code> slot was renamed <code>#week-number</code></li><li>D&amp;D CSS classes changed: <code>.vuecal__event--dragging</code> was renamed
<code>.vuecal__event--ghost</code> (as commonly named), and <code>.vuecal__event--static</code>
was renamed <code>.vuecal__event--original</code></li>`,7))]),l(a,{h2:"",anchor:"slots-changes"},{default:d(()=>e[9]||(e[9]=[o("Slots Changes")])),_:1,__:[9]}),e[16]||(e[16]=t("p",null,"Many slots payload have changed for more consistency and increased flexibility.",-1)),t("p",null,[e[11]||(e[11]=o(`If some of your existing slots don't work as expected from V4, you should, review the list of slots
and their payloads in the `)),l(v,{to:"/documentation/api#slots"},{default:d(()=>e[10]||(e[10]=[o("API documentation page")])),_:1,__:[10]}),e[12]||(e[12]=o(`.
`))]),l(a,{h2:"",anchor:"props-changes"},{default:d(()=>e[13]||(e[13]=[o("Props Changes")])),_:1,__:[13]}),e[17]||(e[17]=n(`<ul><li><code>activeView</code> was renamed <code>view</code>.</li><li><code>selectedDate</code> does not necessary control the view navigation anymore.</li><li><code>hideBody</code> was removed as useless. With so much flexibility, there is no case where you only need the header without the calendar body.</li><li><code>cellContextmenu</code> was removed, you can attach from outside.</li><li><code>disableViews</code> was removed, replaced with <code>views</code> which is defining the available views instead.</li><li><code>small</code> was renamed <code>sm</code>.</li><li><code>x-small</code> was renamed <code>xs</code>.</li><li><code>specialHours</code> was days indexes should now be provided as 3 letter strings like &#39;mon&#39;, &#39;tue&#39;, &#39;wed&#39;, etc.</li><li><code>disableWeekdays</code> was days indexes should now be provided as 3 letter strings like &#39;mon&#39;, &#39;tue&#39;, &#39;wed&#39;, etc.</li><li><code>hideViewsBar</code> was renamed <code>viewsBar</code>, default true.</li><li><code>hideTitleBar</code> was renamed <code>titleBar</code>, default true.</li><li><code>todayButton</code> now defaults to true, previously false.</li><li><code>dblClickToNavigate</code> was removed, you can attach your own DOM events to cells if you need this specific behavior.</li><li><code>day-splits</code> was renamed <code>schedules</code>.</li><li><code>onEventClick</code> was removed, you can attach from outside.</li><li><code>onEventCreate</code> was removed, you can attach from outside and control whether to create the event or reject the creation.</li><li><code>onEventDblclick</code> was removed, you can attach from outside.</li><li><code>cellClickHold</code> was removed, you can attach from outside.</li><li><code>disableDatePrototypes</code> was removed: the prototypes are now disabled by default and you control whether you
want to benefit from it or not.</li><li><code>dblclickToNavigate</code> was removed: can be done externally if needed.</li><li><code>dragToCreateEvent</code> was removed and replaced by the <code>editableEvents.create</code> which now controls the ability to drag to create an event and is on by default when events are editable.</li><li><code>editableEvents.title</code> was removed: you can easily edit the title of an event with custom code using slots, or in a dialog.</li><li><code>snapToTime</code> was renamed <code>snapToInterval</code>.</li><li><code>cellClickHold</code> was removed: can be done externally if needed.</li><li><code>minCellWidth</code> was moved to a CSS variable: <code>--vuecal-min-cell-width: 0;</code>.</li><li><code>minSplitWidth</code> was renamed <code>min-schedule-width</code> and moved to a CSS variable: <code>--vuecal-min-schedule-width: 0;</code></li><li><code>allDayBarHeight</code> was moved to a CSS variable: <code>--vuecal-all-day-bar-height</code>.</li><li><code>showWeekNumbers</code> was renamed <code>weekNumbers</code>.</li><li><code>showAllDayEvents</code> was renamed <code>allDayEvents</code>.</li><li><code>showTimeInCells</code> was removed: if you need to render time in cells, you can use cells slots.</li><li><code>dragToCreateThreshold</code> was renamed <code>eventCreateMinDrag</code>.</li><li><code>stickySplitLabels</code> was removed. Any provided schedule heading is now always positioned in the header.</li><li><code>eventsCountOnYearView</code> was removed. If you need such a feature, you can request this feature in a Github issue with a use case explanation.</li><li><code>eventCount</code> was added in order to toggle the event count display on the month view.</li><li><code>transitions</code> was removed and moved to the CSS var <code>--vuecal-transition-duration</code>.</li></ul>`,1))],64)}}};export{k as default};
